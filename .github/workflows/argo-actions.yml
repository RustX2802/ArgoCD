name: GitOps Pipeline with ArgoCD (Self-Hosted)

on: 
    push:
        branches: 
            - main

env: 
    PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
    ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
    ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}

jobs:
    build:
        runs-on: ubuntu-latest  # Keep build on GitHub runners
        steps: 
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                fetch-depth: 0

            - name: Set up NodeJS
              uses: actions/setup-node@v3
              with: 
                node-version: '14'

            - name: Install NodeJS dependencies
              run: npm install

            - name: Build Docker Image
              run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} .

            - name: Scan Docker Image with Trivy
              run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}

            - name: Log in to DockerHub
              run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            
            - name: Push Docker image to DockerHub
              run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}

    deploy:
        needs: build
        runs-on: self-hosted  # Use self-hosted runner for ArgoCD access
        steps: 
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                fetch-depth: 0

            - name: Install ArgoCD CLI
              run: | 
                  curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
                  chmod +x argocd
                  sudo mv argocd /usr/local/bin/argocd

            - name: Login to ArgoCD
              run: |
                argocd login ${{ secrets.ARGOCD_SERVER }} \
                    --username ${{ secrets.ARGOCD_USERNAME }} \
                    --password ${{ secrets.ARGOCD_PASSWORD }} \
                    --insecure

            - name: Update Application Image
              run: |
                argocd app set my-app \
                    --parameter image.tag=${{ github.sha }}
                
            - name: Sync Application
              run: |
                argocd app sync my-app
                argocd app wait my-app --timeout 300
